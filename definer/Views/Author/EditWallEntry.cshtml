@model definer.Entity.Users.AuthorWall

@{
    ViewData["Title"] = "editing wall entry - definer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="view">
    <div class="entry-editor">
        <form action="/u/edit/wall" method="post" autocomplete="off">
            @Html.Hidden("ID", @Model.ID)
            @Html.Hidden("UserID", @Model.UserID)
            @Html.Hidden("Date", @Model.Date)
            <fieldset class="text-editor">
                <span class="field-validation-error" data-valmsg-for="Body" data-valmsg-replace="true"></span>
                @*<div class="functions">
                    <button type="button" id="bthread">thread</button>
                    <button type="button" id="bspoiler">spoiler</button>
                    <button type="button" id="blink">link</button>
                </div>*@
                @Html.TextAreaFor(m => m.Body)
                <div class="process">
                    <button type="submit">submit</button>
                </div>
            </fieldset>
        </form>
    </div>
</div>
@*<script>
    const bthread = document.getElementById("bthread");
    const bspoiler = document.getElementById("bspoiler");
    const blink = document.getElementById("blink");
    bthread.addEventListener("click", textEditor.checkSelection);
    bspoiler.addEventListener("click", textEditor.checkSelection);
    blink.addEventListener("click", textEditor.checkSelection);
</script>*@