@model definer.Models.EntryViewModel

@{
    var User = (definer.Entity.Users.Users)ViewBag.User;
    var Entries = (definer.Entity.Helpers.FilteredList<definer.Entity.Threads.Entry>)ViewBag.Entries;
    var Thread = (definer.Entity.Threads.Threads)ViewBag.Threads;
    if (Entries != null)
    {
        ViewData["Title"] = Entries.data.FirstOrDefault().Title + " - definer";
    }
    else
    {
        ViewData["Title"] = "definer";
    }
}

@if (Entries != null)
{
    if (Entries.data.Count() > 0)
    {
        <div class="thread">
            <h1><a href="/@CustomTagHelpers.FriendlyURLTitle(@Entries.data.FirstOrDefault().Title)-@Entries.data.FirstOrDefault().ThreadID">@Entries.data.FirstOrDefault().Title</a></h1>
            <div class="entries">
                <ul>
                    @foreach (var item in Entries.data)
                    {
                        string def = "def" + item.ID;
                        <li>
                            <div class="body">@Html.Raw(@CustomTagHelpers.FormatEntry(@item.Body))</div>
                            <footer>
                                <div class="feedback" id="@def">
                                    @if (User != null)
                                    {
                                        if (item.UserID == User.ID)
                                        {
                                            if (item.Attributes != null)
                                            {
                                                if (item.Attributes.Vote.HasValue)
                                                {
                                                    if (item.Attributes.Vote.Value)
                                                    {

                                                        <a onclick="entryAttribute.voteUP(@item.ID)" class="upvoted active"><i class="fas fa-chevron-up"></i></a>
                                                        if (@item.Upvotes > 0)
                                                        {<small class="upCount">@item.Upvotes</small>}
                                                    else
                                                    {
                                                        <small class="upCount"></small>
                                                    }
                                                    <a onclick="entryAttribute.voteDOWN(@item.ID)" class="downvoted"><i class="fas fa-chevron-down"></i></a>
                                                    if (@item.Downvotes > 0)
                                                    {<small class="downCount">@item.Downvotes</small>}
                                                else
                                                {
                                                    <small class="downCount"></small>
                                                }
                                            }
                                            else if (!item.Attributes.Vote.Value)
                                            {
                                                <a onclick="entryAttribute.voteUP(@item.ID)" class="upvoted"><i class="fas fa-chevron-up"></i></a>
                                                if (@item.Upvotes > 0)
                                                {<small class="upCount">@item.Upvotes</small>}
                                            else
                                            {
                                                <small class="upCount"></small>
                                            }
                                            <a onclick="entryAttribute.voteDOWN(@item.ID)" class="downvoted active"><i class="fas fa-chevron-down"></i></a>
                                            if (@item.Downvotes > 0)
                                            {<small class="downCount">@item.Downvotes</small>}
                                        else
                                        {
                                            <small class="downCount"></small>
                                        }
                                    }
                                }
                                else
                                {
                                    <a onclick="entryAttribute.voteUP(@item.ID)" class="upvoted"><i class="fas fa-chevron-up"></i></a>
                                    if (@item.Upvotes > 0)
                                    {<small class="upCount">@item.Upvotes</small>}
                                else
                                {
                                    <small class="upCount"></small>
                                }
                                <a onclick="entryAttribute.voteDOWN(@item.ID)" class="downvoted"><i class="fas fa-chevron-down"></i></a>
                                if (@item.Downvotes > 0)
                                {<small class="downCount">@item.Downvotes</small>}
                            else
                            {
                                <small class="downCount"></small>
                            }
                        }


                        if (item.Attributes.Favourite)
                        {
                            <a onclick="entryAttribute.fav(@item.ID)" class="fav active"><i class="fas fa-heart"></i></a>
                            if (@item.Favourites > 0)
                            {<small class="favCount">@item.Favourites</small>}
                        else
                        {
                            <small class="favCount"></small>
                        }
                    }
                    else
                    {
                        <a onclick="entryAttribute.fav(@item.ID)" class="fav"><i class="fas fa-heart"></i></a>
                        if (@item.Favourites > 0)
                        {<small class="favCount">@item.Favourites</small>}
                    else
                    {
                        <small class="favCount"></small>
                    }
                }
            }
            else
            {
                <a onclick="entryAttribute.voteUP(@item.ID)" class="upvoted"><i class="fas fa-chevron-up"></i></a>
                if (@item.Upvotes > 0)
                {<small class="upCount">@item.Upvotes</small>}
            else
            {
                <small class="upCount"></small>
            }
            <a onclick="entryAttribute.voteDOWN(@item.ID)" class="downvoted"><i class="fas fa-chevron-down"></i></a>
            if (@item.Downvotes > 0)
            {<small class="downCount">@item.Downvotes</small>}
        else
        {
            <small class="downCount"></small>
        }
        <a onclick="entryAttribute.fav(@item.ID)" class="fav"><i class="fas fa-heart"></i></a>
        if (@item.Favourites > 0)
        {<small class="favCount">@item.Favourites</small>}
    else
    {
        <small class="favCount"></small>
    }
}
}
}
                                </div>
                                <div class="info">
                                    <div class="author">
                                        <a href="/">@item.Author</a>
                                    </div>
                                    <div class="link">
                                        @if (User != null)
                                        {
                                            @if (item.UserID == User.ID)
                                            {
                                                <a href="/edit/entry/@item.ID"><small>edit</small></a>
                                            }
                                        }
                                        <a href="/entry/@item.ID">
                                            <small>
                                                @item.Date.ToString("dd.MM.yyyy HH:mm") @if (@item.EditDate != null)
                                                {<text>~ </text> @item.EditDate?.ToString("dd.MM.yyyy HH:mm")}
                                            </small>
                                        </a>
                                    </div>
                                </div>
                            </footer>
                        </li>
                    }
                </ul>
            </div>
            @if (User != null)
            {
                <div class="entry-editor">
                    <form action="/entry" method="post" autocomplete="off">
                        @Html.AntiForgeryToken()
                        @Html.Hidden("ThreadID", @Entries.data.FirstOrDefault().ThreadID)
                        <fieldset class="text-editor">
                            <span class="field-validation-error" data-valmsg-for="Body" data-valmsg-replace="true"></span>
                            <div class="functions">
                                <button type="button" id="bthread">thread</button>
                                <button type="button" id="bspoiler">spoiler</button>
                                <button type="button" id="blink">link</button>
                            </div>
                            @Html.TextAreaFor(m => m.Body, new { @placeholder = "say something about \"" + @Entries.data.FirstOrDefault().Title + "\"" })
                            <div class="process">
                                <button type="submit">submit</button>
                            </div>
                        </fieldset>
                    </form>
                </div>
            }
        </div>
    }
}
else if (Thread != null)
{
    <div class="thread">
        <h1><a href="/@CustomTagHelpers.FriendlyURLTitle(Thread.Title)">@Thread.Title</a></h1>
        <h4>no thread found by this title</h4>
        <div class="entry-editor">
            <form action="/entry" method="post" autocomplete="off">
                @Html.AntiForgeryToken()
                @Html.Hidden("ThreadID", Thread.ID)
                @Html.Hidden("Title", Thread.Title)
                <fieldset class="text-editor">
                    <span class="field-validation-error" data-valmsg-for="Body" data-valmsg-replace="true"></span>
                    <div class="functions">
                        <button type="button" id="bthread">thread</button>
                        <button type="button" id="bspoiler">spoiler</button>
                        <button type="button" id="blink">link</button>
                    </div>
                    @Html.TextAreaFor(m => m.Body, new { @placeholder = "say something about \"" + Thread.Title + "\"" })
                    <div class="process">
                        <button type="submit">submit</button>
                    </div>
                </fieldset>
            </form>
        </div>
    </div>
}
else
{

}

@section Js {
    <script type="text/javascript" src=~/Content/lib/validate/jquery.validate.min.js></script>
    <script type="text/javascript" src=~/Content/lib/validate/jquery.validate.unobtrusive.js></script>
}